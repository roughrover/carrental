pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-creds')  // Docker Hub creds ID in Jenkins
        IMAGE_NAME = "roughrover/carrental-app:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${IMAGE_NAME} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    sh """
                        echo ${DOCKERHUB_CREDENTIALS.password} | docker login -u ${DOCKERHUB_CREDENTIALS.username} --password-stdin
                        docker push ${IMAGE_NAME}
                        docker logout
                    """
                }
            }
        }

        stage('Cleanup Kubernetes') {
            steps {
                script {
                    sh """
                    kubectl delete deployment mysql carrental-web phpmyadmin --ignore-not-found=true
                    kubectl delete svc mysql carrental-service phpmyadmin-service --ignore-not-found=true
                    kubectl delete pvc mysql-pv-claim --ignore-not-found=true
                    """
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh """
                    kubectl apply -f k8s/mysql-pvc.yaml
                    kubectl apply -f k8s/mysql-deployment.yaml
                    kubectl apply -f k8s/mysql-service.yaml

                    kubectl apply -f k8s/web-deployment.yaml
                    kubectl apply -f k8s/web-service.yaml

                    kubectl apply -f k8s/phpmyadmin-deployment.yaml
                    kubectl apply -f k8s/phpmyadmin-service.yaml
                    """
                }
            }
        }
    }

    post {
        success {
            echo "Deployment succeeded!"
        }
        failure {
            echo "Deployment failed."
        }
    }
}
